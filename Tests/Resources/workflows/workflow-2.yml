name: Preternatural Archive Test (Test-Project)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ghcr.io/cirruslabs/macos-runner:sequoia
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install Preternatural
      run: |
        set -x  # Enable verbose output
        brew tap PreternaturalAI/preternatural
        brew install preternatural
      
    - name: Test Preternatural Installation
      run: |
        echo "Preternatural version:"
        preternatural help
        
        echo "Preternatural location:"
        which preternatural
        
        echo "Brew info:"
        brew info preternatural

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ inputs.xcode_version }}

    - name: Install the Apple certificate and provisioning profile
      shell: bash
      env:
        BUILD_CERTIFICATE_BASE64: "base"
        P12_PASSWORD: "123"
      working-directory: 'Test-Project'
      run: |
        # Generate a random keychain password
        KEYCHAIN_PASSWORD=$(openssl rand -base64 15)

        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # Import certificate from inputs
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Make the custom keychain the default and add it to the keychain list
        security default-keychain -s $KEYCHAIN_PATH
        security list-keychains -d user -s $KEYCHAIN_PATH $(security list-keychains -d user | xargs)

    - name: Run preternatural archive command
      shell: bash
      working-directory: 'Test-Project'
      env:
        NOTARIZATION_APP_STORE_CONNECT_USERNAME: "username"
        NOTARIZATION_APP_STORE_CONNECT_PASSWORD: "password"
      run: |
        TEAM_ID="asdbv"

        if [ -n "${TEAM_ID}" ]; then
          script -q /dev/null preternatural archive --team-id "${TEAM_ID}"
        else
          script -q /dev/null preternatural archive
        fi

    - name: Find archive file
      shell: bash
      run: |
        ARCHIVE_FILE=$(find . -name "*Notarized*.zip" -print -quit)
        if [ -z "$ARCHIVE_FILE" ]; then
          echo "Error: No notarized ZIP file found"
          exit 1
        fi
        echo "ARCHIVE_FILE=$ARCHIVE_FILE" >> $GITHUB_ENV
        echo "Found archive file: $ARCHIVE_FILE"

    - name: Upload archive as artifact
      uses: actions/upload-artifact@v4
      with:
        name: notarized-app
        path: ${{ env.ARCHIVE_FILE }}
        if-no-files-found: error

